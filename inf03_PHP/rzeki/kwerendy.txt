//src/main.jsx

import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)
 // src/App.jsx

import './App.css'
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Main  from './components/Main';
import About from './components/About';
import Contact from './components/Contact';
import CartPage from './components/Cart/CartPage';
import Navbar from './components/Navbar';
import Footer from './components/Footer';
import { CartProvider } from './components/Contexts/CartContext';
import ProductList from './components/Products/ProductList';

function App() {

  return (
    <CartProvider>
    <Router>
      <Navbar />
      <Routes>
        <Route path='/' element={<Main />}/>
        <Route path="/products" element={<ProductList />} />
        <Route path='/about' element={<About />}/>
        <Route path='/contact' element={<Contact />}/>
        <Route path='/cart' element={<CartPage />}/>
        <Route path='*' element={<h1>404: NOT DEFINED</h1>}></Route>
      </Routes>
      <Footer />
    </Router>
    </CartProvider>
  )
}

export default App

 // src/components/Main.jsx

import { useState } from 'react';
import ProductList from './Products/ProductList';
import ProductModal from './Products/ProductModal';
 
const initialProducts = [
  { id: 1, name: 'Stół', price: 559, quantity: 10, dimensions: '120x80', image: 'url', discount: 0 },
  { id: 2, name: 'Krzesło', price: 229, quantity: 20, dimensions: '45x45', image: 'url', discount: 15 },
  { id: 3, name: 'Aneks Kuchenny', price: 2399, quantity: 2, dimensions: '****', image: 'url', discount: 0 },
];

 const Main = () => {

  const [products] = useState(initialProducts);
  const [selectedProduct, setSelectedProduct] = useState(null);
  const [cart, setCart] = useState([]);

  const openProductModal = (product) => setSelectedProduct(product);
  const closeProductModal = () => setSelectedProduct(null);

  const addToCart = (product) => {
    setCart([...cart, product]);
    closeProductModal();
  };
  
  return (
    <div>
      <ProductList products={products} openProductModal={openProductModal} />
      {selectedProduct && (
        <ProductModal 
        product={selectedProduct}
        closeModal={closeProductModal}
        addToCart={addToCart}
        />
      )}
    </div>
  )
}

export default Main;
 // src/components/Products/ProductModal.jsx

const ProductModal = ({ product, closeModal, addToCart }) => {
  return (
    <div className="modal" onClick={closeModal}>
      <div className="modal-content" onClick={(e) => e.stopPropagation()}>
        <img src={product.image} alt={product.name} />
        <div className="modal-details">
          <h2>{product.name}</h2>
          <p>Cena: {product.price} zł.</p>
          <p>Zostało: {product.quantity} szt.</p>
          <p>Rozmiary: {product.dimensions}</p>
          <button onClick={() => addToCart(product)}>Dodaj do koszyka</button>
          <button style={{marginLeft: '10px'}} onClick={closeModal}>Zamknij</button>
        </div>
      </div>
    </div>
  )
}

export default ProductModal;
 // src/components/Products/ProductList.jsx

import ProductCard from './ProductCard';

const ProductList = ({ products, openProductModal }) => {
  return (
    <div className='product-list'>
      {products.map((product) => (
        <ProductCard key={product.id} product={product} openProductModal={openProductModal} />
      ))}
    </div>
  )
}

export default ProductList;
 // src/components/Products/ProductCard.jsx
 
 const ProductCard = ({ product, openProductModal }) => {
  return (
    <div className="product-card" onClick={() => openProductModal(product)}>
      <img src={product.image} alt={product.name} />
      <h3>{product.name}</h3>
      <p>Cena: {product.price}</p>
    </div>
  )
}

export default ProductCard;
// src/contexts/CartContext.jsx
import { createContext, useState, useEffect } from 'react';

export const CartContext = createContext();

export const CartProvider = ({ children }) => {
  const [cartItems, setCartItems] = useState([]);

  useEffect(() => {
    const savedCart = JSON.parse(localStorage.getItem('cartItems')) || [];
    setCartItems(savedCart);
  }, []);

  useEffect(() => {
    localStorage.setItem('cartItems', JSON.stringify(cartItems));
  }, [cartItems]);

  const addToCart = (product) => {
    const existingItem = cartItems.find(item => item.id === product.id);

    if (existingItem) {
      setCartItems(cartItems.map(item =>
        item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item
      ));
    } else {
      setCartItems([...cartItems, { ...product, quantity: 1 }]);
    }
  };

  const removeFromCart = (productId) => {
    setCartItems(cartItems.filter(item => item.id !== productId));
  };

  const updateQuantity = (productId, quantity) => {
    setCartItems(cartItems.map(item =>
      item.id === productId ? { ...item, quantity } : item
    ));
  };

  const totalAmount = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);

  return (
    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, updateQuantity, totalAmount }}>
      {children}
    </CartContext.Provider>
  );
};
// src/components/Cart/CartPage.jsx
import { useContext } from 'react';
import { CartContext } from '../Contexts/CartContext';

const CartPage = () => {
  const { cartItems, removeFromCart, updateQuantity, totalAmount } = useContext(CartContext);

  return (
    <div className="cart-page">
      <h2>Koszyk</h2>
      {cartItems.length === 0 ? (
        <p>Koszyk jest pusty</p>
      ) : (
        <div>
          {cartItems.map(item => (
            <div key={item.id} className="cart-item">
              <img src={item.image} alt={item.name} width="50" />
              <div className='cart-item'>
                <h3>{item.name}</h3>
                <p>Cena: {item.price}zł</p>
                <input
                  type="number"
                  value={item.quantity}
                  onChange={(e) => updateQuantity(item.id, parseInt(e.target.value))}
                />
                <button onClick={() => removeFromCart(item.id)}>Usuń z koszyka</button>
                
              </div>
            </div>
          ))}
          <h3>Finalna cena: {totalAmount}zł</h3>
        </div>
      )}
    </div>
  );
};

export default CartPage;

